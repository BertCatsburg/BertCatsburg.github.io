"use strict";(self.webpackChunkdocusaurus_bertcatsburg=self.webpackChunkdocusaurus_bertcatsburg||[]).push([[834],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),p=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(u.Provider,{value:t},e.children)},d="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,h=d["".concat(u,".").concat(c)]||d[c]||s[c]||l;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1257:(e,t,n)=>{n.d(t,{r:()=>r,I:()=>o});var a=n(7294);const r=e=>a.createElement("a",{href:e.to,target:"_blank"},e.children),l=[{description:"smiling face with open mouth",value:"\ud83d\ude03"},{description:"winking face",value:"\ud83d\ude09"},{description:"face with stuck-out tongue and winking eye",value:"\ud83d\ude1c"},{description:"astonished face",value:"\ud83d\ude32"},{description:"white heavy check mark",value:"\u2705"}],o=e=>{const t=l.find((t=>t.description===e.description));return t?t.value:null}},8407:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>m});var a=n(7462),r=(n(7294),n(3905)),l=n(1257);const o={sidebar_position:2},i="Terraform Map",u={unversionedId:"terraform-list-and-map/map",id:"terraform-list-and-map/map",title:"Terraform Map",description:"All the code should be put in a file called main.tf in the root of the project folder.",source:"@site/docs/terraform-list-and-map/02-map.mdx",sourceDirName:"terraform-list-and-map",slug:"/terraform-list-and-map/map",permalink:"/docs/terraform-list-and-map/map",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/docs/terraform-list-and-map/intro"},next:{title:"Terraform List",permalink:"/docs/terraform-list-and-map/list"}},p={},m=[{value:"Showing results",id:"showing-results",level:4},{value:"Map",id:"map",level:2},{value:"Get the &#39;keyC&#39; value from the Map",id:"get-the-keyc-value-from-the-map",level:2},{value:"Output",id:"output",level:4},{value:"Get all values in the Map",id:"get-all-values-in-the-map",level:2},{value:"Output",id:"output-1",level:4},{value:"Per Element",id:"per-element",level:2},{value:"for_each Meta Argument",id:"for_each-meta-argument",level:3},{value:"Inside the module",id:"inside-the-module",level:4},{value:"Back in the root module",id:"back-in-the-root-module",level:4},{value:"Output",id:"output-2",level:4}],d={toc:m},s="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"terraform-map"},"Terraform Map"),(0,r.kt)("p",null,"All the code should be put in a file called main.tf in the root of the project folder.\nJust cut-and-paste."),(0,r.kt)("h4",{id:"showing-results"},"Showing results"),(0,r.kt)("p",null,"The code in this article does nothing with providers, only variables and outputs in Terraform.\nSo, deployment is done by a Terraform Apply"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ terraform apply --auto-approve\n")),(0,r.kt)("h2",{id:"map"},"Map"),(0,r.kt)("p",null,"The Map we are working with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'variable "MAP_1" {\n  type = map(string)\n  default = {\n    keyA = "ValueA"\n    keyB = "ValueB"\n    keyC = "ValueC"\n  }\n}\n')),(0,r.kt)("h2",{id:"get-the-keyc-value-from-the-map"},"Get the 'keyC' value from the Map"),(0,r.kt)("p",null,"(Same main.tf)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'output "OUT_MAP_1" {\n  value = var.MAP_1["keyC"]\n}\n')),(0,r.kt)("h4",{id:"output"},"Output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'OUT_MAP_1 = "ValueC"\n')),(0,r.kt)("h2",{id:"get-all-values-in-the-map"},"Get all values in the Map"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'output "OUT_MAP_1_ALL_VALUES" {\n  value = var.MAP_1\n}\n')),(0,r.kt)("h4",{id:"output-1"},"Output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'OUT_MAP_1_ALL_VALUES = tomap({\n  "keyA" = "ValueA"\n  "keyB" = "ValueB"\n  "keyC" = "ValueC"\n})\n')),(0,r.kt)("h2",{id:"per-element"},"Per Element"),(0,r.kt)("p",null,"Let's do something on a per element basis. Since we don't have a resource, we need a submodule to play around with that."),(0,r.kt)("p",null,"Submodules in Terraform are very simple:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a subdirectory with any name"),(0,r.kt)("li",{parentName:"ul"},"Specify the submodule in main.tf (in root dir), give it any name."),(0,r.kt)("li",{parentName:"ul"},"And tell that main.tf where to find the source of the module")),(0,r.kt)("p",null,"And we will use the 'for_each' Meta Argument"),(0,r.kt)("h3",{id:"for_each-meta-argument"},"for_each Meta Argument"),(0,r.kt)("p",null,"Specify the module in the main.tf file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'module "MAP_PER_ELEMENT" {\n  source          = "./module_map_element"\n  for_each        = var.MAP_1\n  mapElementKey   = each.key\n  mapElementValue = each.value\n}\n')),(0,r.kt)("p",null,"This means the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The source of the module is in a subdir called ",(0,r.kt)("b",null,"module_map_element"),"."),(0,r.kt)("li",{parentName:"ul"},"for_each means that we will call the module for each element in the ",(0,r.kt)("b",null,"var.MAP_1"),"."),(0,r.kt)("li",{parentName:"ul"},"We pass a variable called 'mapElementKey' with the value of the key: ",(0,r.kt)("br",null),'"keyA", "keyB", "keyC".'),(0,r.kt)("li",{parentName:"ul"},'And a value of that key in the map: "ValueA", ... (maybe I should use more realistic values here ',(0,r.kt)(l.I,{description:"winking face",mdxType:"ShowEmoticon"}),")")),(0,r.kt)("p",null,"What happens is that this module is called automatically for each (!!) occurrence of a key in the map."),(0,r.kt)("h4",{id:"inside-the-module"},"Inside the module"),(0,r.kt)("p",null,"The module also has a main.tf file with the following contents ",(0,r.kt)("br",null),"(located in subdir ./module_map_element/main.tf)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'variable "mapElementKey" {\n  type = string\n}\n\nvariable "mapElementValue" {\n  type = string\n}\n\noutput "MODULE_MAP_ELEMENT_OUTPUT" {\n  value = "${var.mapElementKey} = ${var.mapElementValue}"\n}\n')),(0,r.kt)("p",null,"Since you are passing 2 variables into the module, they have to be 'caught' by variables inside the module.\nTherefore, the two variable definitions."),(0,r.kt)("p",null,"And then you can use them in 'resources' inside the module, or 'output' statements like we do here.\nThe only thing the output does is make a string available named \"MODULE_MAP_ELEMENT_OUTPUT\" to the outside world."),(0,r.kt)("h4",{id:"back-in-the-root-module"},"Back in the root module"),(0,r.kt)("p",null,"The main.tf file in the root is often called the root module."),(0,r.kt)("p",null,"There the module is called (3 times) and we can access the output from the module."),(0,r.kt)("p",null,"In root module, main.tf:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'output "MODULE_MAP_ELEMENT_OUTPUT" {\n  value = module.MAP_PER_ELEMENT\n}\n')),(0,r.kt)("h4",{id:"output-2"},"Output"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'MODULE_MAP_ELEMENT_OUTPUT = {\n  "keyA" = {\n    "MODULE_MAP_ELEMENT_OUTPUT" = "keyA = ValueA"\n  }\n  "keyB" = {\n    "MODULE_MAP_ELEMENT_OUTPUT" = "keyB = ValueB"\n  }\n  "keyC" = {\n    "MODULE_MAP_ELEMENT_OUTPUT" = "keyC = ValueC"\n  }\n}\n')))}c.isMDXComponent=!0}}]);